// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// full_AUC
double full_AUC(NumericVector tt_0, NumericVector tt_1);
RcppExport SEXP _optcombVUS_full_AUC(SEXP tt_0SEXP, SEXP tt_1SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt_0(tt_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt_1(tt_1SEXP);
    rcpp_result_gen = Rcpp::wrap(full_AUC(tt_0, tt_1));
    return rcpp_result_gen;
END_RCPP
}
// auc_C_smooth
double auc_C_smooth(NumericVector tt1, NumericVector tt2, double h, char link);
RcppExport SEXP _optcombVUS_auc_C_smooth(SEXP tt1SEXP, SEXP tt2SEXP, SEXP hSEXP, SEXP linkSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt1(tt1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt2(tt2SEXP);
    Rcpp::traits::input_parameter< double >::type h(hSEXP);
    Rcpp::traits::input_parameter< char >::type link(linkSEXP);
    rcpp_result_gen = Rcpp::wrap(auc_C_smooth(tt1, tt2, h, link));
    return rcpp_result_gen;
END_RCPP
}
// vusC_full
double vusC_full(NumericVector tt1, NumericVector tt2, NumericVector tt3);
RcppExport SEXP _optcombVUS_vusC_full(SEXP tt1SEXP, SEXP tt2SEXP, SEXP tt3SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt1(tt1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt2(tt2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt3(tt3SEXP);
    rcpp_result_gen = Rcpp::wrap(vusC_full(tt1, tt2, tt3));
    return rcpp_result_gen;
END_RCPP
}
// vusC_sigmoid
double vusC_sigmoid(NumericVector tt1, NumericVector tt2, NumericVector tt3, NumericVector sig_n);
RcppExport SEXP _optcombVUS_vusC_sigmoid(SEXP tt1SEXP, SEXP tt2SEXP, SEXP tt3SEXP, SEXP sig_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt1(tt1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt2(tt2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt3(tt3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig_n(sig_nSEXP);
    rcpp_result_gen = Rcpp::wrap(vusC_sigmoid(tt1, tt2, tt3, sig_n));
    return rcpp_result_gen;
END_RCPP
}
// vusC_probit
double vusC_probit(NumericVector tt1, NumericVector tt2, NumericVector tt3, NumericVector sig_n);
RcppExport SEXP _optcombVUS_vusC_probit(SEXP tt1SEXP, SEXP tt2SEXP, SEXP tt3SEXP, SEXP sig_nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type tt1(tt1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt2(tt2SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tt3(tt3SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type sig_n(sig_nSEXP);
    rcpp_result_gen = Rcpp::wrap(vusC_probit(tt1, tt2, tt3, sig_n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_optcombVUS_full_AUC", (DL_FUNC) &_optcombVUS_full_AUC, 2},
    {"_optcombVUS_auc_C_smooth", (DL_FUNC) &_optcombVUS_auc_C_smooth, 4},
    {"_optcombVUS_vusC_full", (DL_FUNC) &_optcombVUS_vusC_full, 3},
    {"_optcombVUS_vusC_sigmoid", (DL_FUNC) &_optcombVUS_vusC_sigmoid, 4},
    {"_optcombVUS_vusC_probit", (DL_FUNC) &_optcombVUS_vusC_probit, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_optcombVUS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
